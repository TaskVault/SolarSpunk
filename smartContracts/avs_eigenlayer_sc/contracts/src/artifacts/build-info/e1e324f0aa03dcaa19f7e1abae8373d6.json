{
	"id": "e1e324f0aa03dcaa19f7e1abae8373d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.12;\n\nimport \"@openzeppelin/contracts/interfaces/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Mock is Context, IERC20 {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(\n        address account\n    ) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    function mint(address account, uint256 amount) public {\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(\n        address owner,\n        address spender\n    ) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(\n        address /*spender*/,\n        uint256 /*amount*/\n    ) public virtual override returns (bool) {\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        require(\n            _balances[from] >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[from] = _balances[from] - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(\n                currentAllowance >= amount,\n                \"ERC20: insufficient allowance\"\n            );\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol": {
				"ERC20Mock": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1542:9861  contract ERC20Mock is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1542:9861  contract ERC20Mock is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3147:3294  function approve(... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":616:630   */\n      swap1\n      iszero\n        /* \"#utility.yul\":609:631   */\n      iszero\n        /* \"#utility.yul\":591:632   */\n      dup2\n      mstore\n        /* \"#utility.yul\":579:581   */\n      0x20\n        /* \"#utility.yul\":564:582   */\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3147:3294  function approve(... */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1801:1907  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_4:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1888:1900  _totalSupply */\n      sload(0x02)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1801:1907  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":789:814   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":777:779   */\n      0x20\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1801:1907  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_15\n        /* \"#utility.yul\":643:820   */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3856:4054  function transferFrom(... */\n    tag_5:\n      tag_11\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2110:2203  function mint(address account, uint256 amount) public {... */\n    tag_6:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1965:2104  function balanceOf(... */\n    tag_7:\n      tag_17\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2079:2097  _balances[account] */\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2053:2060  uint256 */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2079:2097  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":1965:2104  function balanceOf(... */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2399:2610  function transfer(... */\n    tag_8:\n      tag_11\n      tag_35\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2668:2839  function allowance(... */\n    tag_9:\n      tag_17\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2805:2823  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2779:2786  uint256 */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2805:2823  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2805:2816  _allowances */\n      0x01\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2805:2823  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2805:2832  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2668:2839  function allowance(... */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3147:3294  function approve(... */\n    tag_14:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3283:3287  true */\n      0x01\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3147:3294  function approve(... */\n    tag_43:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3856:4054  function transferFrom(... */\n    tag_24:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3983:3987  bool */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3999:4026  _transfer(from, to, amount) */\n      tag_46\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4009:4013  from */\n      dup5\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4015:4017  to */\n      dup5\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4019:4025  amount */\n      dup5\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3999:4008  _transfer */\n      tag_47\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3999:4026  _transfer(from, to, amount) */\n      jump\t// in\n    tag_46:\n      pop\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4043:4047  true */\n      0x01\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":3856:4054  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2110:2203  function mint(address account, uint256 amount) public {... */\n    tag_28:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2174:2196  _mint(account, amount) */\n      tag_49\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2180:2187  account */\n      dup3\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2189:2195  amount */\n      dup3\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2174:2179  _mint */\n      tag_50\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2174:2196  _mint(account, amount) */\n      jump\t// in\n    tag_49:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2110:2203  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2399:2610  function transfer(... */\n    tag_36:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2500:2504  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2554:2582  _transfer(owner, to, amount) */\n      tag_46\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2571:2573  to */\n      dup6\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":2575:2581  amount */\n      dup6\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4508:5321  function _transfer(... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4634:4652  from != address(0) */\n      dup4\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4626:4694  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1816:1818   */\n      0x20\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4626:4694  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1798:1819   */\n      mstore\n        /* \"#utility.yul\":1855:1857   */\n      0x25\n        /* \"#utility.yul\":1835:1853   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1828:1858   */\n      mstore\n        /* \"#utility.yul\":1894:1928   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":1874:1892   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1867:1929   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":1945:1963   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1938:1973   */\n      mstore\n        /* \"#utility.yul\":1990:2009   */\n      0x84\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4626:4694  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4712:4728  to != address(0) */\n      dup3\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4704:4768  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2222:2224   */\n      0x20\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4704:4768  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2204:2225   */\n      mstore\n        /* \"#utility.yul\":2261:2263   */\n      0x23\n        /* \"#utility.yul\":2241:2259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2234:2264   */\n      mstore\n        /* \"#utility.yul\":2300:2334   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2280:2298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2273:2335   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":2351:2369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2344:2377   */\n      mstore\n        /* \"#utility.yul\":2394:2413   */\n      0x84\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4704:4768  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_59\n        /* \"#utility.yul\":2020:2419   */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4704:4768  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4849:4864  _balances[from] */\n      dup4\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4849:4858  _balances */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4849:4864  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4849:4874  _balances[from] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4828:4938  require(... */\n      tag_66\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2626:2628   */\n      0x20\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4828:4938  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2608:2629   */\n      mstore\n        /* \"#utility.yul\":2665:2667   */\n      0x26\n        /* \"#utility.yul\":2645:2663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2638:2668   */\n      mstore\n        /* \"#utility.yul\":2704:2738   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":2684:2702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2677:2739   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":2755:2773   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2748:2784   */\n      mstore\n        /* \"#utility.yul\":2801:2820   */\n      0x84\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4828:4938  require(... */\n      tag_59\n        /* \"#utility.yul\":2424:2826   */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4828:4938  require(... */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4990:5005  _balances[from] */\n      dup4\n      dup2\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4990:4999  _balances */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4990:5005  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4990:5014  _balances[from] - amount */\n      dup8\n      swap1\n      sub\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4972:5014  _balances[from] = _balances[from] - amount */\n      swap1\n      sstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5191:5204  _balances[to] */\n      swap4\n      dup7\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5191:5214  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5240:5266  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":789:814   */\n      dup5\n      dup2\n      mstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5191:5204  _balances[to] */\n      swap1\n      swap3\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5240:5266  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5240:5266  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":4508:5321  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5597:6013  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5680:5701  account != address(0) */\n      dup3\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5672:5737  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5672:5737  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3015:3036   */\n      mstore\n        /* \"#utility.yul\":3072:3074   */\n      0x1f\n        /* \"#utility.yul\":3052:3070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3045:3075   */\n      mstore\n        /* \"#utility.yul\":3111:3144   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":3091:3109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3084:3145   */\n      mstore\n        /* \"#utility.yul\":3162:3180   */\n      0x64\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5672:5737  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_59\n        /* \"#utility.yul\":2831:3186   */\n      jump\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5672:5737  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_73:\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5764:5770  amount */\n      dup1\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5748:5760  _totalSupply */\n      0x02\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5748:5770  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5916:5934  _balances[account] */\n      dup3\n      and\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5916:5925  _balances */\n      0x00\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5916:5934  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5916:5944  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5969:6006  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":789:814   */\n      dup5\n      dup2\n      mstore\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5969:6006  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":762:780   */\n      add\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5969:6006  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":5597:6013  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_82:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_85:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_13:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_87:\n        /* \"#utility.yul\":360:389   */\n      tag_88\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_82\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":825:1153   */\n    tag_23:\n        /* \"#utility.yul\":902:908   */\n      0x00\n        /* \"#utility.yul\":910:916   */\n      dup1\n        /* \"#utility.yul\":918:924   */\n      0x00\n        /* \"#utility.yul\":971:973   */\n      0x60\n        /* \"#utility.yul\":959:968   */\n      dup5\n        /* \"#utility.yul\":950:957   */\n      dup7\n        /* \"#utility.yul\":946:969   */\n      sub\n        /* \"#utility.yul\":942:974   */\n      slt\n        /* \"#utility.yul\":939:991   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":987:988   */\n      0x00\n        /* \"#utility.yul\":984:985   */\n      dup1\n        /* \"#utility.yul\":977:989   */\n      revert\n        /* \"#utility.yul\":939:991   */\n    tag_92:\n        /* \"#utility.yul\":1010:1039   */\n      tag_93\n        /* \"#utility.yul\":1029:1038   */\n      dup5\n        /* \"#utility.yul\":1010:1039   */\n      tag_82\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1000:1039   */\n      swap3\n      pop\n        /* \"#utility.yul\":1058:1096   */\n      tag_94\n        /* \"#utility.yul\":1092:1094   */\n      0x20\n        /* \"#utility.yul\":1081:1090   */\n      dup6\n        /* \"#utility.yul\":1077:1095   */\n      add\n        /* \"#utility.yul\":1058:1096   */\n      tag_82\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1048:1096   */\n      swap2\n      pop\n        /* \"#utility.yul\":1143:1145   */\n      0x40\n        /* \"#utility.yul\":1132:1141   */\n      dup5\n        /* \"#utility.yul\":1128:1146   */\n      add\n        /* \"#utility.yul\":1115:1147   */\n      calldataload\n        /* \"#utility.yul\":1105:1147   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:1153   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1158:1344   */\n    tag_31:\n        /* \"#utility.yul\":1217:1223   */\n      0x00\n        /* \"#utility.yul\":1270:1272   */\n      0x20\n        /* \"#utility.yul\":1258:1267   */\n      dup3\n        /* \"#utility.yul\":1249:1256   */\n      dup5\n        /* \"#utility.yul\":1245:1268   */\n      sub\n        /* \"#utility.yul\":1241:1273   */\n      slt\n        /* \"#utility.yul\":1238:1290   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1286:1287   */\n      0x00\n        /* \"#utility.yul\":1283:1284   */\n      dup1\n        /* \"#utility.yul\":1276:1288   */\n      revert\n        /* \"#utility.yul\":1238:1290   */\n    tag_96:\n        /* \"#utility.yul\":1309:1338   */\n      tag_97\n        /* \"#utility.yul\":1328:1337   */\n      dup3\n        /* \"#utility.yul\":1309:1338   */\n      tag_82\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1299:1338   */\n      swap4\n        /* \"#utility.yul\":1158:1344   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1609   */\n    tag_40:\n        /* \"#utility.yul\":1417:1423   */\n      0x00\n        /* \"#utility.yul\":1425:1431   */\n      dup1\n        /* \"#utility.yul\":1478:1480   */\n      0x40\n        /* \"#utility.yul\":1466:1475   */\n      dup4\n        /* \"#utility.yul\":1457:1464   */\n      dup6\n        /* \"#utility.yul\":1453:1476   */\n      sub\n        /* \"#utility.yul\":1449:1481   */\n      slt\n        /* \"#utility.yul\":1446:1498   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":1494:1495   */\n      0x00\n        /* \"#utility.yul\":1491:1492   */\n      dup1\n        /* \"#utility.yul\":1484:1496   */\n      revert\n        /* \"#utility.yul\":1446:1498   */\n    tag_99:\n        /* \"#utility.yul\":1517:1546   */\n      tag_100\n        /* \"#utility.yul\":1536:1545   */\n      dup4\n        /* \"#utility.yul\":1517:1546   */\n      tag_82\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1507:1546   */\n      swap2\n      pop\n        /* \"#utility.yul\":1565:1603   */\n      tag_101\n        /* \"#utility.yul\":1599:1601   */\n      0x20\n        /* \"#utility.yul\":1588:1597   */\n      dup5\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"#utility.yul\":1565:1603   */\n      tag_82\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1555:1603   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1609   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3191:3413   */\n    tag_77:\n        /* \"#utility.yul\":3256:3265   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3277:3287   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3274:3407   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":3329:3339   */\n      0x4e487b71\n        /* \"#utility.yul\":3324:3327   */\n      0xe0\n        /* \"#utility.yul\":3320:3340   */\n      shl\n        /* \"#utility.yul\":3317:3318   */\n      0x00\n        /* \"#utility.yul\":3310:3341   */\n      mstore\n        /* \"#utility.yul\":3364:3368   */\n      0x11\n        /* \"#utility.yul\":3361:3362   */\n      0x04\n        /* \"#utility.yul\":3354:3369   */\n      mstore\n        /* \"#utility.yul\":3392:3396   */\n      0x24\n        /* \"#utility.yul\":3389:3390   */\n      0x00\n        /* \"#utility.yul\":3382:3397   */\n      revert\n\n    auxdata: 0xa26469706673582212207745ee35001432547ae80437d0959967bd8cca6decd7b28c8b5efa826a1c16a564736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506105108061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c806340c10f191161005857806340c10f19146100cb57806370a08231146100e0578063a9059cbb14610108578063dd62ed3e1461011b575f80fd5b8063095ea7b31461007e57806318160ddd146100a657806323b872dd146100b8575b5f80fd5b61009161008c366004610409565b610153565b60405190151581526020015b60405180910390f35b6002545b60405190815260200161009d565b6100916100c6366004610431565b61015c565b6100de6100d9366004610409565b610172565b005b6100aa6100ee36600461046a565b6001600160a01b03165f9081526020819052604090205490565b610091610116366004610409565b610180565b6100aa61012936600461048a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60015b92915050565b5f610168848484610189565b5060019392505050565b61017c8282610331565b5050565b5f336101688185855b6001600160a01b0383166101f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084015b60405180910390fd5b6001600160a01b0382166102545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016101e9565b6001600160a01b0383165f908152602081905260409020548111156102ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016101e9565b6001600160a01b038381165f818152602081815260408083208054879003905593861680835291849020805486019055925184815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b0382166103875760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016101e9565b8060025f82825461039891906104bb565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b80356001600160a01b0381168114610404575f80fd5b919050565b5f806040838503121561041a575f80fd5b610423836103ee565b946020939093013593505050565b5f805f60608486031215610443575f80fd5b61044c846103ee565b925061045a602085016103ee565b9150604084013590509250925092565b5f6020828403121561047a575f80fd5b610483826103ee565b9392505050565b5f806040838503121561049b575f80fd5b6104a4836103ee565b91506104b2602084016103ee565b90509250929050565b8082018082111561015657634e487b7160e01b5f52601160045260245ffdfea26469706673582212207745ee35001432547ae80437d0959967bd8cca6decd7b28c8b5efa826a1c16a564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x510 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH2 0x91 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH2 0xDE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH2 0xAA PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x189 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17C DUP3 DUP3 PUSH2 0x331 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x168 DUP2 DUP6 DUP6 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP4 DUP7 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP4 PUSH2 0x3EE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x44C DUP5 PUSH2 0x3EE JUMP JUMPDEST SWAP3 POP PUSH2 0x45A PUSH1 0x20 DUP6 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP3 PUSH2 0x3EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A4 DUP4 PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 PUSH1 0x20 DUP5 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x156 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x45EE35001432547AE80437D0959967BD8CCA6DECD7B28C8B MCOPY STATICCALL DUP3 PUSH11 0x1C16A564736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "1542:8319:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_535": {
									"entryPoint": null,
									"id": 535,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_524": {
									"entryPoint": null,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_362": {
									"entryPoint": 817,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_93": {
									"entryPoint": null,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_323": {
									"entryPoint": 393,
									"id": 323,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_212": {
									"entryPoint": null,
									"id": 212,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_226": {
									"entryPoint": 339,
									"id": 226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_156": {
									"entryPoint": null,
									"id": 156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_169": {
									"entryPoint": 370,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@totalSupply_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_248": {
									"entryPoint": 348,
									"id": 248,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_194": {
									"entryPoint": 384,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3415:4",
										"nodeType": "YulBlock",
										"src": "0:3415:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:4",
													"nodeType": "YulBlock",
													"src": "63:124:4",
													"statements": [
														{
															"nativeSrc": "73:29:4",
															"nodeType": "YulAssignment",
															"src": "73:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:4"
																},
																"nativeSrc": "82:20:4",
																"nodeType": "YulFunctionCall",
																"src": "82:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:4",
																"nodeType": "YulBlock",
																"src": "165:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:4",
																					"nodeType": "YulLiteral",
																					"src": "174:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:4",
																					"nodeType": "YulLiteral",
																					"src": "177:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:4"
																			},
																			"nativeSrc": "167:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:4"
																		},
																		"nativeSrc": "167:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:4",
																										"nodeType": "YulLiteral",
																										"src": "150:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:4",
																										"nodeType": "YulLiteral",
																										"src": "155:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:4"
																								},
																								"nativeSrc": "146:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:4",
																								"nodeType": "YulLiteral",
																								"src": "159:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:4"
																						},
																						"nativeSrc": "142:19:4",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:4"
																				},
																				"nativeSrc": "131:31:4",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:4"
																		},
																		"nativeSrc": "121:42:4",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:4"
																},
																"nativeSrc": "114:50:4",
																"nodeType": "YulFunctionCall",
																"src": "114:50:4"
															},
															"nativeSrc": "111:70:4",
															"nodeType": "YulIf",
															"src": "111:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:4",
														"nodeType": "YulTypedName",
														"src": "42:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:4",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "14:173:4"
											},
											{
												"body": {
													"nativeSrc": "279:167:4",
													"nodeType": "YulBlock",
													"src": "279:167:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:4",
																"nodeType": "YulBlock",
																"src": "325:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:4",
																					"nodeType": "YulLiteral",
																					"src": "334:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:4",
																					"nodeType": "YulLiteral",
																					"src": "337:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:4"
																			},
																			"nativeSrc": "327:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:4"
																		},
																		"nativeSrc": "327:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:4"
																		},
																		"nativeSrc": "296:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:4",
																		"nodeType": "YulLiteral",
																		"src": "321:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:4"
																},
																"nativeSrc": "292:32:4",
																"nodeType": "YulFunctionCall",
																"src": "292:32:4"
															},
															"nativeSrc": "289:52:4",
															"nodeType": "YulIf",
															"src": "289:52:4"
														},
														{
															"nativeSrc": "350:39:4",
															"nodeType": "YulAssignment",
															"src": "350:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "379:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "360:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:4"
																},
																"nativeSrc": "360:29:4",
																"nodeType": "YulFunctionCall",
																"src": "360:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "350:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:4"
																}
															]
														},
														{
															"nativeSrc": "398:42:4",
															"nodeType": "YulAssignment",
															"src": "398:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "425:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "436:2:4",
																				"nodeType": "YulLiteral",
																				"src": "436:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "421:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:4"
																		},
																		"nativeSrc": "421:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "408:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:4"
																},
																"nativeSrc": "408:32:4",
																"nodeType": "YulFunctionCall",
																"src": "408:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "398:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "192:254:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:4",
														"nodeType": "YulTypedName",
														"src": "237:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:4",
														"nodeType": "YulTypedName",
														"src": "248:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:4",
														"nodeType": "YulTypedName",
														"src": "260:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:4",
														"nodeType": "YulTypedName",
														"src": "268:6:4",
														"type": ""
													}
												],
												"src": "192:254:4"
											},
											{
												"body": {
													"nativeSrc": "546:92:4",
													"nodeType": "YulBlock",
													"src": "546:92:4",
													"statements": [
														{
															"nativeSrc": "556:26:4",
															"nodeType": "YulAssignment",
															"src": "556:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "568:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "568:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "579:2:4",
																		"nodeType": "YulLiteral",
																		"src": "579:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "564:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:4"
																},
																"nativeSrc": "564:18:4",
																"nodeType": "YulFunctionCall",
																"src": "564:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "556:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "556:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "598:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "623:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "623:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "616:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "616:6:4"
																				},
																				"nativeSrc": "616:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "616:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "609:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "609:6:4"
																		},
																		"nativeSrc": "609:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "609:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "591:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "591:6:4"
																},
																"nativeSrc": "591:41:4",
																"nodeType": "YulFunctionCall",
																"src": "591:41:4"
															},
															"nativeSrc": "591:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "591:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "451:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "515:9:4",
														"nodeType": "YulTypedName",
														"src": "515:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "526:6:4",
														"nodeType": "YulTypedName",
														"src": "526:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "537:4:4",
														"nodeType": "YulTypedName",
														"src": "537:4:4",
														"type": ""
													}
												],
												"src": "451:187:4"
											},
											{
												"body": {
													"nativeSrc": "744:76:4",
													"nodeType": "YulBlock",
													"src": "744:76:4",
													"statements": [
														{
															"nativeSrc": "754:26:4",
															"nodeType": "YulAssignment",
															"src": "754:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "766:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "766:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:2:4",
																		"nodeType": "YulLiteral",
																		"src": "777:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "762:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:4"
																},
																"nativeSrc": "762:18:4",
																"nodeType": "YulFunctionCall",
																"src": "762:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "754:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "754:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "796:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "796:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "807:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "789:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "789:6:4"
																},
																"nativeSrc": "789:25:4",
																"nodeType": "YulFunctionCall",
																"src": "789:25:4"
															},
															"nativeSrc": "789:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "789:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "643:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "713:9:4",
														"nodeType": "YulTypedName",
														"src": "713:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "724:6:4",
														"nodeType": "YulTypedName",
														"src": "724:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "735:4:4",
														"nodeType": "YulTypedName",
														"src": "735:4:4",
														"type": ""
													}
												],
												"src": "643:177:4"
											},
											{
												"body": {
													"nativeSrc": "929:224:4",
													"nodeType": "YulBlock",
													"src": "929:224:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "975:16:4",
																"nodeType": "YulBlock",
																"src": "975:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "984:1:4",
																					"nodeType": "YulLiteral",
																					"src": "984:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "987:1:4",
																					"nodeType": "YulLiteral",
																					"src": "987:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "977:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "977:6:4"
																			},
																			"nativeSrc": "977:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "977:12:4"
																		},
																		"nativeSrc": "977:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "977:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "950:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "950:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "959:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "959:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "946:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "946:3:4"
																		},
																		"nativeSrc": "946:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "946:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "971:2:4",
																		"nodeType": "YulLiteral",
																		"src": "971:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "942:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "942:3:4"
																},
																"nativeSrc": "942:32:4",
																"nodeType": "YulFunctionCall",
																"src": "942:32:4"
															},
															"nativeSrc": "939:52:4",
															"nodeType": "YulIf",
															"src": "939:52:4"
														},
														{
															"nativeSrc": "1000:39:4",
															"nodeType": "YulAssignment",
															"src": "1000:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1029:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1029:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1010:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1010:18:4"
																},
																"nativeSrc": "1010:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1010:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1000:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:4"
																}
															]
														},
														{
															"nativeSrc": "1048:48:4",
															"nodeType": "YulAssignment",
															"src": "1048:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1092:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1092:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1077:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1077:3:4"
																		},
																		"nativeSrc": "1077:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1077:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1058:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1058:18:4"
																},
																"nativeSrc": "1058:38:4",
																"nodeType": "YulFunctionCall",
																"src": "1058:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1048:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:4"
																}
															]
														},
														{
															"nativeSrc": "1105:42:4",
															"nodeType": "YulAssignment",
															"src": "1105:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1132:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1143:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1143:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1128:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:4"
																		},
																		"nativeSrc": "1128:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1128:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1115:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1115:12:4"
																},
																"nativeSrc": "1115:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1115:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1105:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "825:328:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "879:9:4",
														"nodeType": "YulTypedName",
														"src": "879:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "890:7:4",
														"nodeType": "YulTypedName",
														"src": "890:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "902:6:4",
														"nodeType": "YulTypedName",
														"src": "902:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "910:6:4",
														"nodeType": "YulTypedName",
														"src": "910:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "918:6:4",
														"nodeType": "YulTypedName",
														"src": "918:6:4",
														"type": ""
													}
												],
												"src": "825:328:4"
											},
											{
												"body": {
													"nativeSrc": "1228:116:4",
													"nodeType": "YulBlock",
													"src": "1228:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1274:16:4",
																"nodeType": "YulBlock",
																"src": "1274:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1283:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1286:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1276:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:4"
																			},
																			"nativeSrc": "1276:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:4"
																		},
																		"nativeSrc": "1276:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1249:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1258:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1258:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1245:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1245:3:4"
																		},
																		"nativeSrc": "1245:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1270:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1270:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1241:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:4"
																},
																"nativeSrc": "1241:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1241:32:4"
															},
															"nativeSrc": "1238:52:4",
															"nodeType": "YulIf",
															"src": "1238:52:4"
														},
														{
															"nativeSrc": "1299:39:4",
															"nodeType": "YulAssignment",
															"src": "1299:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1328:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1328:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1309:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1309:18:4"
																},
																"nativeSrc": "1309:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1309:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1299:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1158:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1194:9:4",
														"nodeType": "YulTypedName",
														"src": "1194:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1205:7:4",
														"nodeType": "YulTypedName",
														"src": "1205:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1217:6:4",
														"nodeType": "YulTypedName",
														"src": "1217:6:4",
														"type": ""
													}
												],
												"src": "1158:186:4"
											},
											{
												"body": {
													"nativeSrc": "1436:173:4",
													"nodeType": "YulBlock",
													"src": "1436:173:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1482:16:4",
																"nodeType": "YulBlock",
																"src": "1482:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1491:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1491:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1494:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1494:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1484:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:4"
																			},
																			"nativeSrc": "1484:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1484:12:4"
																		},
																		"nativeSrc": "1484:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1457:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1457:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1466:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1466:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1453:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1453:3:4"
																		},
																		"nativeSrc": "1453:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1478:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1478:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1449:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1449:3:4"
																},
																"nativeSrc": "1449:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1449:32:4"
															},
															"nativeSrc": "1446:52:4",
															"nodeType": "YulIf",
															"src": "1446:52:4"
														},
														{
															"nativeSrc": "1507:39:4",
															"nodeType": "YulAssignment",
															"src": "1507:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1536:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1536:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1517:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1517:18:4"
																},
																"nativeSrc": "1517:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1517:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1507:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:4"
																}
															]
														},
														{
															"nativeSrc": "1555:48:4",
															"nodeType": "YulAssignment",
															"src": "1555:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1588:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1588:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1599:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1599:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1584:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1584:3:4"
																		},
																		"nativeSrc": "1584:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1565:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1565:18:4"
																},
																"nativeSrc": "1565:38:4",
																"nodeType": "YulFunctionCall",
																"src": "1565:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1555:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1555:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1349:260:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1394:9:4",
														"nodeType": "YulTypedName",
														"src": "1394:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1405:7:4",
														"nodeType": "YulTypedName",
														"src": "1405:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1417:6:4",
														"nodeType": "YulTypedName",
														"src": "1417:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1425:6:4",
														"nodeType": "YulTypedName",
														"src": "1425:6:4",
														"type": ""
													}
												],
												"src": "1349:260:4"
											},
											{
												"body": {
													"nativeSrc": "1788:227:4",
													"nodeType": "YulBlock",
													"src": "1788:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1805:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1805:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1816:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1816:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1798:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:4"
																},
																"nativeSrc": "1798:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1798:21:4"
															},
															"nativeSrc": "1798:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1798:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1850:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:4"
																		},
																		"nativeSrc": "1835:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1855:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1855:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1828:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:4"
																},
																"nativeSrc": "1828:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1828:30:4"
															},
															"nativeSrc": "1828:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "1828:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1878:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1878:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1889:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1889:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1874:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1874:3:4"
																		},
																		"nativeSrc": "1874:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1874:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "1894:34:4",
																		"nodeType": "YulLiteral",
																		"src": "1894:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1867:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:4"
																},
																"nativeSrc": "1867:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1867:62:4"
															},
															"nativeSrc": "1867:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "1867:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1949:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1949:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1960:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1960:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1945:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1945:3:4"
																		},
																		"nativeSrc": "1945:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1945:18:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "1965:7:4",
																		"nodeType": "YulLiteral",
																		"src": "1965:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1938:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:4"
																},
																"nativeSrc": "1938:35:4",
																"nodeType": "YulFunctionCall",
																"src": "1938:35:4"
															},
															"nativeSrc": "1938:35:4",
															"nodeType": "YulExpressionStatement",
															"src": "1938:35:4"
														},
														{
															"nativeSrc": "1982:27:4",
															"nodeType": "YulAssignment",
															"src": "1982:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1994:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1994:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2005:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2005:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1990:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:4"
																},
																"nativeSrc": "1990:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1990:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1982:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1982:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1614:401:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1765:9:4",
														"nodeType": "YulTypedName",
														"src": "1765:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1779:4:4",
														"nodeType": "YulTypedName",
														"src": "1779:4:4",
														"type": ""
													}
												],
												"src": "1614:401:4"
											},
											{
												"body": {
													"nativeSrc": "2194:225:4",
													"nodeType": "YulBlock",
													"src": "2194:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2211:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2222:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2222:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2204:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:4"
																},
																"nativeSrc": "2204:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2204:21:4"
															},
															"nativeSrc": "2204:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2204:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2245:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2245:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2256:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2256:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2241:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:4"
																		},
																		"nativeSrc": "2241:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2241:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2261:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2261:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2234:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:4"
																},
																"nativeSrc": "2234:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2234:30:4"
															},
															"nativeSrc": "2234:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2234:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2284:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2284:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2295:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2295:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2280:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:4"
																		},
																		"nativeSrc": "2280:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2280:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "2300:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2300:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2273:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:4"
																},
																"nativeSrc": "2273:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2273:62:4"
															},
															"nativeSrc": "2273:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2273:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2355:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2355:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2366:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2366:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2351:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2351:3:4"
																		},
																		"nativeSrc": "2351:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2351:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "2371:5:4",
																		"nodeType": "YulLiteral",
																		"src": "2371:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2344:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2344:6:4"
																},
																"nativeSrc": "2344:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2344:33:4"
															},
															"nativeSrc": "2344:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2344:33:4"
														},
														{
															"nativeSrc": "2386:27:4",
															"nodeType": "YulAssignment",
															"src": "2386:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2398:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2398:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2409:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2409:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2394:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2394:3:4"
																},
																"nativeSrc": "2394:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2394:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2386:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2386:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2020:399:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2171:9:4",
														"nodeType": "YulTypedName",
														"src": "2171:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2185:4:4",
														"nodeType": "YulTypedName",
														"src": "2185:4:4",
														"type": ""
													}
												],
												"src": "2020:399:4"
											},
											{
												"body": {
													"nativeSrc": "2598:228:4",
													"nodeType": "YulBlock",
													"src": "2598:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2615:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2615:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2626:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2626:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2608:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:4"
																},
																"nativeSrc": "2608:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2608:21:4"
															},
															"nativeSrc": "2608:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "2608:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2649:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2649:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2660:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2660:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2645:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2645:3:4"
																		},
																		"nativeSrc": "2645:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2645:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2665:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2665:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2638:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:4"
																},
																"nativeSrc": "2638:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2638:30:4"
															},
															"nativeSrc": "2638:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2638:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2688:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2688:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2699:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2699:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2684:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2684:3:4"
																		},
																		"nativeSrc": "2684:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2684:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "2704:34:4",
																		"nodeType": "YulLiteral",
																		"src": "2704:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2677:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:4"
																},
																"nativeSrc": "2677:62:4",
																"nodeType": "YulFunctionCall",
																"src": "2677:62:4"
															},
															"nativeSrc": "2677:62:4",
															"nodeType": "YulExpressionStatement",
															"src": "2677:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2770:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2770:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2755:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:4"
																		},
																		"nativeSrc": "2755:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2755:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "2775:8:4",
																		"nodeType": "YulLiteral",
																		"src": "2775:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2748:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2748:6:4"
																},
																"nativeSrc": "2748:36:4",
																"nodeType": "YulFunctionCall",
																"src": "2748:36:4"
															},
															"nativeSrc": "2748:36:4",
															"nodeType": "YulExpressionStatement",
															"src": "2748:36:4"
														},
														{
															"nativeSrc": "2793:27:4",
															"nodeType": "YulAssignment",
															"src": "2793:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2805:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2816:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2816:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2801:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:4"
																},
																"nativeSrc": "2801:19:4",
																"nodeType": "YulFunctionCall",
																"src": "2801:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2793:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2793:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2424:402:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2575:9:4",
														"nodeType": "YulTypedName",
														"src": "2575:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2589:4:4",
														"nodeType": "YulTypedName",
														"src": "2589:4:4",
														"type": ""
													}
												],
												"src": "2424:402:4"
											},
											{
												"body": {
													"nativeSrc": "3005:181:4",
													"nodeType": "YulBlock",
													"src": "3005:181:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3022:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3033:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3015:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3015:6:4"
																},
																"nativeSrc": "3015:21:4",
																"nodeType": "YulFunctionCall",
																"src": "3015:21:4"
															},
															"nativeSrc": "3015:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "3015:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3056:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3067:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3052:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:4"
																		},
																		"nativeSrc": "3052:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3072:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3045:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:4"
																},
																"nativeSrc": "3045:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3045:30:4"
															},
															"nativeSrc": "3045:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "3045:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3095:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3106:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3106:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3091:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:4"
																		},
																		"nativeSrc": "3091:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:18:4"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "3111:33:4",
																		"nodeType": "YulLiteral",
																		"src": "3111:33:4",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3084:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:4"
																},
																"nativeSrc": "3084:61:4",
																"nodeType": "YulFunctionCall",
																"src": "3084:61:4"
															},
															"nativeSrc": "3084:61:4",
															"nodeType": "YulExpressionStatement",
															"src": "3084:61:4"
														},
														{
															"nativeSrc": "3154:26:4",
															"nodeType": "YulAssignment",
															"src": "3154:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3166:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3177:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3162:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3162:3:4"
																},
																"nativeSrc": "3162:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3162:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3154:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3154:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2831:355:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2982:9:4",
														"nodeType": "YulTypedName",
														"src": "2982:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2996:4:4",
														"nodeType": "YulTypedName",
														"src": "2996:4:4",
														"type": ""
													}
												],
												"src": "2831:355:4"
											},
											{
												"body": {
													"nativeSrc": "3239:174:4",
													"nodeType": "YulBlock",
													"src": "3239:174:4",
													"statements": [
														{
															"nativeSrc": "3249:16:4",
															"nodeType": "YulAssignment",
															"src": "3249:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3260:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3260:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3263:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3256:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:4"
																},
																"nativeSrc": "3256:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3256:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3249:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3249:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3296:111:4",
																"nodeType": "YulBlock",
																"src": "3296:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3317:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3317:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3324:3:4",
																							"nodeType": "YulLiteral",
																							"src": "3324:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3329:10:4",
																							"nodeType": "YulLiteral",
																							"src": "3329:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3320:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "3320:3:4"
																					},
																					"nativeSrc": "3320:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3320:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3310:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3310:6:4"
																			},
																			"nativeSrc": "3310:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3310:31:4"
																		},
																		"nativeSrc": "3310:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3310:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3361:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3361:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3364:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3364:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3354:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3354:6:4"
																			},
																			"nativeSrc": "3354:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3354:15:4"
																		},
																		"nativeSrc": "3354:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3354:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3389:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3389:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3392:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3392:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3382:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3382:6:4"
																			},
																			"nativeSrc": "3382:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3382:15:4"
																		},
																		"nativeSrc": "3382:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3280:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3280:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3283:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3277:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3277:2:4"
																},
																"nativeSrc": "3277:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3277:10:4"
															},
															"nativeSrc": "3274:133:4",
															"nodeType": "YulIf",
															"src": "3274:133:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3191:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3222:1:4",
														"nodeType": "YulTypedName",
														"src": "3222:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3225:1:4",
														"nodeType": "YulTypedName",
														"src": "3225:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3231:3:4",
														"nodeType": "YulTypedName",
														"src": "3231:3:4",
														"type": ""
													}
												],
												"src": "3191:222:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007a575f3560e01c806340c10f191161005857806340c10f19146100cb57806370a08231146100e0578063a9059cbb14610108578063dd62ed3e1461011b575f80fd5b8063095ea7b31461007e57806318160ddd146100a657806323b872dd146100b8575b5f80fd5b61009161008c366004610409565b610153565b60405190151581526020015b60405180910390f35b6002545b60405190815260200161009d565b6100916100c6366004610431565b61015c565b6100de6100d9366004610409565b610172565b005b6100aa6100ee36600461046a565b6001600160a01b03165f9081526020819052604090205490565b610091610116366004610409565b610180565b6100aa61012936600461048a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b60015b92915050565b5f610168848484610189565b5060019392505050565b61017c8282610331565b5050565b5f336101688185855b6001600160a01b0383166101f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084015b60405180910390fd5b6001600160a01b0382166102545760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016101e9565b6001600160a01b0383165f908152602081905260409020548111156102ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016101e9565b6001600160a01b038381165f818152602081815260408083208054879003905593861680835291849020805486019055925184815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b0382166103875760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016101e9565b8060025f82825461039891906104bb565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b80356001600160a01b0381168114610404575f80fd5b919050565b5f806040838503121561041a575f80fd5b610423836103ee565b946020939093013593505050565b5f805f60608486031215610443575f80fd5b61044c846103ee565b925061045a602085016103ee565b9150604084013590509250925092565b5f6020828403121561047a575f80fd5b610483826103ee565b9392505050565b5f806040838503121561049b575f80fd5b6104a4836103ee565b91506104b2602084016103ee565b90509250929050565b8082018082111561015657634e487b7160e01b5f52601160045260245ffdfea26469706673582212207745ee35001432547ae80437d0959967bd8cca6decd7b28c8b5efa826a1c16a564736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x153 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9D JUMP JUMPDEST PUSH2 0x91 PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH2 0xDE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x172 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAA PUSH2 0xEE CALLDATASIZE PUSH1 0x4 PUSH2 0x46A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x409 JUMP JUMPDEST PUSH2 0x180 JUMP JUMPDEST PUSH2 0xAA PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x168 DUP5 DUP5 DUP5 PUSH2 0x189 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17C DUP3 DUP3 PUSH2 0x331 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x168 DUP2 DUP6 DUP6 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x254 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE SWAP4 DUP7 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP3 MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E9 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x423 DUP4 PUSH2 0x3EE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x443 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x44C DUP5 PUSH2 0x3EE JUMP JUMPDEST SWAP3 POP PUSH2 0x45A PUSH1 0x20 DUP6 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x47A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x483 DUP3 PUSH2 0x3EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4A4 DUP4 PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP PUSH2 0x4B2 PUSH1 0x20 DUP5 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x156 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x45EE35001432547AE80437D0959967BD8CCA6DECD7B28C8B MCOPY STATICCALL DUP3 PUSH11 0x1C16A564736F6C63430008 NOT STOP CALLER ",
							"sourceMap": "1542:8319:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3147:147;;;;;;:::i;:::-;;:::i;:::-;;;616:14:4;;609:22;591:41;;579:2;564:18;3147:147:3;;;;;;;;1801:106;1888:12;;1801:106;;;789:25:4;;;777:2;762:18;1801:106:3;643:177:4;3856:198:3;;;;;;:::i;:::-;;:::i;2110:93::-;;;;;;:::i;:::-;;:::i;:::-;;1965:139;;;;;;:::i;:::-;-1:-1:-1;;;;;2079:18:3;2053:7;2079:18;;;;;;;;;;;;1965:139;2399:211;;;;;;:::i;:::-;;:::i;2668:171::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2805:18:3;;;2779:7;2805:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2668:171;3147:147;3283:4;3147:147;;;;;:::o;3856:198::-;3983:4;3999:27;4009:4;4015:2;4019:6;3999:9;:27::i;:::-;-1:-1:-1;4043:4:3;3856:198;;;;;:::o;2110:93::-;2174:22;2180:7;2189:6;2174:5;:22::i;:::-;2110:93;;:::o;2399:211::-;2500:4;735:10:2;2554:28:3;735:10:2;2571:2:3;2575:6;4508:813;-1:-1:-1;;;;;4634:18:3;;4626:68;;;;-1:-1:-1;;;4626:68:3;;1816:2:4;4626:68:3;;;1798:21:4;1855:2;1835:18;;;1828:30;1894:34;1874:18;;;1867:62;-1:-1:-1;;;1945:18:4;;;1938:35;1990:19;;4626:68:3;;;;;;;;;-1:-1:-1;;;;;4712:16:3;;4704:64;;;;-1:-1:-1;;;4704:64:3;;2222:2:4;4704:64:3;;;2204:21:4;2261:2;2241:18;;;2234:30;2300:34;2280:18;;;2273:62;-1:-1:-1;;;2351:18:4;;;2344:33;2394:19;;4704:64:3;2020:399:4;4704:64:3;-1:-1:-1;;;;;4849:15:3;;:9;:15;;;;;;;;;;;:25;-1:-1:-1;4849:25:3;4828:110;;;;-1:-1:-1;;;4828:110:3;;2626:2:4;4828:110:3;;;2608:21:4;2665:2;2645:18;;;2638:30;2704:34;2684:18;;;2677:62;-1:-1:-1;;;2755:18:4;;;2748:36;2801:19;;4828:110:3;2424:402:4;4828:110:3;-1:-1:-1;;;;;4990:15:3;;;:9;:15;;;;;;;;;;;;;:24;;;4972:42;;5191:13;;;;;;;;;;:23;;;;;;5240:26;;789:25:4;;;5191:13:3;;5240:26;;762:18:4;5240:26:3;;;;;;;4508:813;;;:::o;5597:416::-;-1:-1:-1;;;;;5680:21:3;;5672:65;;;;-1:-1:-1;;;5672:65:3;;3033:2:4;5672:65:3;;;3015:21:4;3072:2;3052:18;;;3045:30;3111:33;3091:18;;;3084:61;3162:18;;5672:65:3;2831:355:4;5672:65:3;5764:6;5748:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;5916:18:3;;:9;:18;;;;;;;;;;;:28;;;;;;5969:37;789:25:4;;;5969:37:3;;762:18:4;5969:37:3;;;;;;;5597:416;;:::o;14:173:4:-;82:20;;-1:-1:-1;;;;;131:31:4;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:4:o;825:328::-;902:6;910;918;971:2;959:9;950:7;946:23;942:32;939:52;;;987:1;984;977:12;939:52;1010:29;1029:9;1010:29;:::i;:::-;1000:39;;1058:38;1092:2;1081:9;1077:18;1058:38;:::i;:::-;1048:48;;1143:2;1132:9;1128:18;1115:32;1105:42;;825:328;;;;;:::o;1158:186::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1309:29;1328:9;1309:29;:::i;:::-;1299:39;1158:186;-1:-1:-1;;;1158:186:4:o;1349:260::-;1417:6;1425;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;1517:29;1536:9;1517:29;:::i;:::-;1507:39;;1565:38;1599:2;1588:9;1584:18;1565:38;:::i;:::-;1555:48;;1349:260;;;;;:::o;3191:222::-;3256:9;;;3277:10;;;3274:133;;;3329:10;3324:3;3320:20;3317:1;3310:31;3364:4;3361:1;3354:15;3392:4;3389:1;3382:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "259200",
								"executionCost": "298",
								"totalCost": "259498"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "388",
								"balanceOf(address)": "2559",
								"mint(address,uint256)": "50801",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "53149",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 9861,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207745ee35001432547ae80437d0959967bd8cca6decd7b28c8b5efa826a1c16a564736f6c63430008190033",
									".code": [
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 9861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3147,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3147,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 616,
											"end": 630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 616,
											"end": 630,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 609,
											"end": 631,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 591,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 591,
											"end": 632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 579,
											"end": 581,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1888,
											"end": 1900,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 643,
											"end": 820,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3856,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3856,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2110,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2110,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1965,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2399,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2399,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2668,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3147,
											"end": 3294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4009,
											"end": 4013,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4017,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3999,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3999,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3856,
											"end": 4054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2174,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2399,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 5321,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4508,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1816,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1798,
											"end": 1819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1857,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 1973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1990,
											"end": 2009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4626,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4712,
											"end": 4728,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2222,
											"end": 2224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2234,
											"end": 2264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2300,
											"end": 2334,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2273,
											"end": 2335,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2351,
											"end": 2369,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2344,
											"end": 2377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2394,
											"end": 2413,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2020,
											"end": 2419,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4704,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4864,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4874,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2626,
											"end": 2628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2608,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2665,
											"end": 2667,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2638,
											"end": 2668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2704,
											"end": 2738,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2801,
											"end": 2820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2424,
											"end": 2826,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4828,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5014,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5014,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5214,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5191,
											"end": 5204,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 5321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 5321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 5321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4508,
											"end": 5321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 6013,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5597,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5680,
											"end": 5701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5701,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3015,
											"end": 3036,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3074,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3144,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2831,
											"end": 3186,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 5672,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5748,
											"end": 5760,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 5748,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5748,
											"end": 5770,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5944,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 789,
											"end": 814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 762,
											"end": 780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5969,
											"end": 6006,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 6013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 6013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5597,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 959,
											"end": 968,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 946,
											"end": 969,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 939,
											"end": 991,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 939,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 939,
											"end": 991,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 985,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 977,
											"end": 989,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 939,
											"end": 991,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 939,
											"end": 991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1029,
											"end": 1038,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1010,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1010,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1092,
											"end": 1094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1077,
											"end": 1095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1058,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1096,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1058,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1128,
											"end": 1146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1115,
											"end": 1147,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 825,
											"end": 1153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1344,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1158,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 1273,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1290,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1238,
											"end": 1290,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1238,
											"end": 1290,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1238,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1309,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1338,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1309,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1299,
											"end": 1338,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1344,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1417,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1481,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1498,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1446,
											"end": 1498,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1494,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1496,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1498,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1446,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1517,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1546,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1517,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1565,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1565,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3413,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3191,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3256,
											"end": 3265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3407,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3274,
											"end": 3407,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3329,
											"end": 3339,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3324,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3320,
											"end": 3340,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3361,
											"end": 3362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3354,
											"end": 3369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3396,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3389,
											"end": 3390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol\":{\"keccak256\":\"0x6a2f0dd6942995dfc4a7e3f279ecf071c55f120d32234c8ef137c0eeff703b5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d30dc09616519390df030dfcfc83f0bc3d5a51faae32d5d1589a955098398e4f\",\"dweb:/ipfs/QmaWKFJ5PSQ4ibYY56rGyAakoHBXd7X9gxNNRfEpYWFDDM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 124,
								"contract": "avs_eigenlayer_sc/contracts/src/ERC20Mock.sol:ERC20Mock",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 130,
								"contract": "avs_eigenlayer_sc/contracts/src/ERC20Mock.sol:ERC20Mock",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 132,
								"contract": "avs_eigenlayer_sc/contracts/src/ERC20Mock.sol:ERC20Mock",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							81
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 82,
							"src": "131:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "139:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 24,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 81,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 81,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 81,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 81,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 81,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 81,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								15,
								24
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							111
						]
					},
					"id": 112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 84,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 111,
							"linearizedBaseContracts": [
								111
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 89,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 88,
												"id": 91,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 111,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 98,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 97,
												"id": 100,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 111,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 106,
												"id": 108,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 111,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 112,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"avs_eigenlayer_sc/contracts/src/ERC20Mock.sol": {
				"ast": {
					"absolutePath": "avs_eigenlayer_sc/contracts/src/ERC20Mock.sol",
					"exportedSymbols": {
						"Context": [
							111
						],
						"ERC20Mock": [
							536
						],
						"IERC20": [
							81
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"id": 114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 4,
							"src": "131:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 112,
							"src": "187:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"1564:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 111,
										"src": "1564:7:3"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "1564:7:3"
								},
								{
									"baseName": {
										"id": 119,
										"name": "IERC20",
										"nameLocations": [
											"1573:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 81,
										"src": "1573:6:3"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1573:6:3"
								}
							],
							"canonicalName": "ERC20Mock",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "240:1301:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536,
								81,
								111
							],
							"name": "ERC20Mock",
							"nameLocation": "1551:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 124,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1622:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "1586:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 123,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1594:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1586:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 122,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1605:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1694:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "1638:67:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 129,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1646:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1638:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 128,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 126,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1665:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1657:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 127,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1728:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "1712:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1712:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1871:36:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "1888:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 140,
												"nodeType": "Return",
												"src": "1881:19:3"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1747:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1810:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1844:8:3"
									},
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1821:2:3"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1862:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:9:3"
									},
									"scope": 536,
									"src": "1801:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2062:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 151,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2079:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 153,
													"indexExpression": {
														"id": 152,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2089:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2079:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 150,
												"id": 154,
												"nodeType": "Return",
												"src": "2072:25:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1913:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1974:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2035:8:3"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2001:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1993:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:31:3"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2053:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:9:3"
									},
									"scope": 536,
									"src": "1965:139:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2164:39:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2180:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 165,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2189:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 163,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2174:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2174:22:3"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2119:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2132:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2124:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2124:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2149:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2141:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:33:3"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2164:0:3"
									},
									"scope": 536,
									"src": "2110:93:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "2506:104:3",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2524:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 193,
														"src": "2516:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 180,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2516:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "2532:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2532:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2516:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2564:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "2571:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2575:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "2554:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2554:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2554:28:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2599:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 179,
												"id": 192,
												"nodeType": "Return",
												"src": "2592:11:3"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2209:185:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2408:8:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2482:8:3"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2454:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2446:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:50:3"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "2500:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2500:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:6:3"
									},
									"scope": 536,
									"src": "2399:211:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2788:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 205,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "2805:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 207,
														"indexExpression": {
															"id": 206,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "2817:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2805:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 209,
													"indexExpression": {
														"id": 208,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "2824:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2805:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 204,
												"id": 210,
												"nodeType": "Return",
												"src": "2798:34:3"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "2616:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2677:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2761:8:3"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2704:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2696:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2727:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2719:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2686:54:3"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2779:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:9:3"
									},
									"scope": 536,
									"src": "2668:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "3266:28:3",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3283:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 222,
												"id": 224,
												"nodeType": "Return",
												"src": "3276:11:3"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2845:297:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3156:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 219,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3242:8:3"
									},
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3173:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3202:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3163:63:3"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3260:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3260:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:6:3"
									},
									"scope": 536,
									"src": "3147:147:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "3989:65:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4009:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4015:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "4019:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3999:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3999:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3999:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4043:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 238,
												"id": 246,
												"nodeType": "Return",
												"src": "4036:11:3"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3300:551:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3865:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3965:8:3"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3887:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3917:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3909:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3937:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3929:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:72:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3983:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3983:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:6:3"
									},
									"scope": 536,
									"src": "3856:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "4616:705:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "4634:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4650:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4642:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 260,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4642:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4642:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4634:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4654:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4626:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4626:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4626:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 269,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "4712:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4726:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4718:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 270,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4718:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4718:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4712:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4730:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4704:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4704:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4704:64:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4800:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 280,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4806:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 281,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "4810:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 278,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4779:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "4779:38:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 285,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "4849:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 287,
																"indexExpression": {
																	"id": 286,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4859:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4849:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 288,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "4868:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4849:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4888:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4828:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:110:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "4828:110:3"
											},
											{
												"id": 309,
												"nodeType": "UncheckedBlock",
												"src": "4948:277:3",
												"statements": [
													{
														"expression": {
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 293,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "4972:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 295,
																"indexExpression": {
																	"id": 294,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4982:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4972:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 296,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "4990:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 298,
																	"indexExpression": {
																		"id": 297,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "5000:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4990:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 299,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "5008:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4990:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4972:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 302,
														"nodeType": "ExpressionStatement",
														"src": "4972:42:3"
													},
													{
														"expression": {
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 303,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "5191:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 305,
																"indexExpression": {
																	"id": 304,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "5201:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5191:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 306,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "5208:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5191:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 308,
														"nodeType": "ExpressionStatement",
														"src": "5191:23:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 311,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "5249:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 312,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "5255:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 313,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5259:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 310,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "5240:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5240:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "5235:31:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "5297:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "5303:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "5307:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 316,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "5277:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5277:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "5277:37:3"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "4060:443:3",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "4517:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4544:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4536:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4566:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4558:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4586:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "4578:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:72:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4616:0:3"
									},
									"scope": 536,
									"src": "4508:813:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "5662:351:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "5680:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5699:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5691:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5691:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5691:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5680:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5703:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5672:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5672:65:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "5672:65:3"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "5748:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 342,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5764:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5748:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5748:22:3"
											},
											{
												"id": 351,
												"nodeType": "UncheckedBlock",
												"src": "5780:175:3",
												"statements": [
													{
														"expression": {
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 345,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "5916:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 347,
																"indexExpression": {
																	"id": 346,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "5926:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5916:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 348,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5938:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5916:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 350,
														"nodeType": "ExpressionStatement",
														"src": "5916:28:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5986:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5978:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5978:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5978:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "5990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "5999:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 352,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "5969:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5969:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "EmitStatement",
												"src": "5964:42:3"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "5327:265:3",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5606:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5620:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5612:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5637:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "5629:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:33:3"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5662:0:3"
									},
									"scope": 536,
									"src": "5597:416:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "6398:594:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "6416:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6435:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6427:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6427:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6427:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6416:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6439:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6408:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6408:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "6408:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 381,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6507:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6524:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6516:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 382,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6516:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6516:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6528:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 380,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "6486:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6486:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "6486:49:3"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "6554:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 433,
														"src": "6546:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6546:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"baseExpression": {
														"id": 391,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "6571:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 393,
													"indexExpression": {
														"id": 392,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "6581:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6571:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6546:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "6607:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 397,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "6625:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6607:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6633:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6599:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6599:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "6599:71:3"
											},
											{
												"id": 414,
												"nodeType": "UncheckedBlock",
												"src": "6680:194:3",
												"statements": [
													{
														"expression": {
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 402,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "6704:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 404,
																"indexExpression": {
																	"id": 403,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "6714:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6704:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 405,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "6725:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 406,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "6742:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6725:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6704:44:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "6704:44:3"
													},
													{
														"expression": {
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 410,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "6841:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 411,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "6857:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6841:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 413,
														"nodeType": "ExpressionStatement",
														"src": "6841:22:3"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6898:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6907:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6907:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6907:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6919:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 415,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "6889:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "EmitStatement",
												"src": "6884:42:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "6957:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6974:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6966:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6966:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6966:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "6978:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 424,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "6937:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6937:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "6937:48:3"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "6019:309:3",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6342:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6356:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6348:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6373:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6365:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6347:33:3"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6398:0:3"
									},
									"scope": 536,
									"src": "6333:659:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7528:257:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "7546:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7563:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7555:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 446,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7555:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7555:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7546:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7567:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7538:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7538:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "7538:68:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 455,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "7624:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7643:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7635:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 456,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7635:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7635:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7624:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7647:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 454,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7616:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7616:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "7616:68:3"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 464,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "7695:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 467,
															"indexExpression": {
																"id": 465,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "7707:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7695:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 468,
														"indexExpression": {
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7714:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7695:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "7725:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7695:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "7695:36:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 473,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7755:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "7762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "7771:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 472,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "7746:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "EmitStatement",
												"src": "7741:37:3"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "6998:412:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "7424:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7442:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7442:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7498:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7490:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7432:78:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7528:0:3"
									},
									"scope": 536,
									"src": "7415:370:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "8186:260:3",
										"statements": [
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8204:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "8196:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8196:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"id": 492,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "8233:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "8240:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 491,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "8223:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8223:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8196:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 496,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "8262:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8287:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8287:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 497,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8282:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8282:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8296:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8282:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8262:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "IfStatement",
												"src": "8258:182:3",
												"trueBody": {
													"id": 510,
													"nodeType": "Block",
													"src": "8301:139:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 504,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "8340:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 505,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "8360:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8340:26:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8384:31:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 503,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8315:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8315:114:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 509,
															"nodeType": "ExpressionStatement",
															"src": "8315:114:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "7791:270:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "8075:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "8100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8131:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "8123:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8156:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "8148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8090:78:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8186:0:3"
									},
									"scope": 536,
									"src": "8066:380:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "9149:2:3",
										"statements": []
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "8452:573:3",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "9039:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9077:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9069:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9069:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9099:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9091:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9091:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9119:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "9111:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9111:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9059:72:3"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9149:0:3"
									},
									"scope": 536,
									"src": "9030:121:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "9857:2:3",
										"statements": []
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "9157:577:3",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "9748:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9785:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "9777:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9777:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9807:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "9799:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9799:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9827:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "9819:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9819:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9767:72:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9857:0:3"
									},
									"scope": 536,
									"src": "9739:120:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 537,
							"src": "1542:8319:3",
							"usedErrors": [],
							"usedEvents": [
								15,
								24
							]
						}
					],
					"src": "105:9757:3"
				},
				"id": 3
			}
		}
	}
}